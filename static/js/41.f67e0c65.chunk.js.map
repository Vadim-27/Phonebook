{"version":3,"file":"static/js/41.f67e0c65.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","modules/MyContact/MyContactList/MyContactList.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/modules/MyContact/MyContactFilter/myContactFilter.module.css?b22f","modules/MyContact/MyContactFilter/MyContactFilter.jsx","modules/MyContact/MyContactForm/initialState.js","webpack://react-homework-template/./src/modules/MyContact/MyContactForm/myContactForm.module.css?d64d","modules/MyContact/MyContactForm/MyContactForm.jsx","webpack://react-homework-template/./src/modules/MyContact/myContact.module.css?9579","modules/MyContact/MyContact.jsx","Page/ContactsPage.jsx"],"sourcesContent":["export const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ filter, contacts }) => {\n  \n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchDeleteContacts } from 'redux/contacts/contacts-operations';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filterList = useSelector(getFilteredContacts);\n\n  const contactDelete = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n  const contact = filterList.map(({ id, name, number }) => (\n    <li key={id}>\n      {name}:{number}\n      <button type=\"button\" onClick={() => contactDelete(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul>{contact}</ul>;\n};\n\nexport default ContactList;\n","export const getFilter = ({ filter }) => filter;","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"myContactFilter_filterBox__INQfb\",\"myFormInput\":\"myContactFilter_myFormInput__IuZes\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport css from './myContactFilter.module.css';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const handleChenge = ({ currentTarget }) => {\n    dispatch(setFilter(currentTarget.value));\n  };\n\n  return (\n    <div className={css.filterBox}>\n      <label>\n        Find contacts by name\n        <input\n          className={css.myFormInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChenge}\n          placeholder=\"Filter contact\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default ContactFilter;\n","const initialState = {\n    name: '',\n    number: '',\n  \n};\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"myForm\":\"myContactForm_myForm__P-zOE\",\"myFormInput\":\"myContactForm_myFormInput__UGgg8\",\"myFormBtn\":\"myContactForm_myFormBtn__cbT9u\"};","import { useState } from 'react';\n\nimport initialState from './initialState';\nimport { useDispatch } from 'react-redux';\nimport { getAllContacts } from 'redux/contacts/contacts-selectors';\nimport { useSelector } from 'react-redux';\nimport css from './myContactForm.module.css';\nimport { fetchAddContacts } from 'redux/contacts/contacts-operations';\n\nconst MyContactForm = () => {\n  const [state, setState] = useState({ ...initialState });\n  const allContacts = useSelector(getAllContacts);\n \n\n  const dispatch = useDispatch();\n\n  const handleSubmint = e => {\n    e.preventDefault();\n    if (\n      allContacts.find(({ name }) => {\n        const normalizedName = state.name.toLowerCase();\n        return name.toLowerCase() === normalizedName;\n      })\n    ) {\n      reset();\n      return alert(`${name} is already is contacts`);\n    }\n\n    dispatch(fetchAddContacts({ ...state }));\n    reset();\n  };\n  const reset = () => {\n    setState({ ...initialState });\n  };\n\n  const handleChenge = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { name, number } = state;\n  return (\n    <form className={css.myForm} onSubmit={handleSubmint}>\n      <label htmlFor=\"\">Name</label>\n      <input\n        className={css.myFormInput}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChenge}\n        placeholder=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"\">Number</label>\n      <input\n        className={css.myFormInput}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChenge}\n        placeholder=\"Number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.myFormBtn} type=\"submint\">\n        {' '}\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default MyContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"myContact_title__Ux-ou\",\"message\":\"myContact_message__4ffbf\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { fetchAllContacts } from 'redux/contacts/contacts-operations';\n\nimport ContactList from './MyContactList/MyContactList';\nimport ContactFilter from './MyContactFilter/MyContactFilter';\nimport MyContactForm from './MyContactForm/MyContactForm';\nimport css from './myContact.module.css';\n\nconst MyContact = () => {\n  const FilteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllContacts())\n  }, [dispatch])\n\n  const isContacts = Boolean(FilteredContacts.length);\n\n  return (\n    <div>\n      <h2 className={css.title}>Phonebook</h2>\n      <MyContactForm />\n      <div>\n        <h3 className={css.title}>Contact</h3>\n        <ContactFilter />\n\n        {isContacts ? (\n          <ContactList />\n        ) : (\n          <p className={css.message}>No saved contacts</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MyContact;\n","import MyContact from 'modules/MyContact/MyContact';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <MyContact />;\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getAllContacts","contacts","items","getFilteredContacts","filter","normalizedFilter","toLowerCase","name","includes","dispatch","useDispatch","filterList","useSelector","contact","map","id","number","type","onClick","fetchDeleteContacts","contactDelete","getFilter","className","css","value","onChange","currentTarget","setFilter","placeholder","useState","initialState","state","setState","allContacts","reset","handleChenge","target","prevState","onSubmit","e","preventDefault","find","normalizedName","alert","fetchAddContacts","htmlFor","pattern","title","required","FilteredContacts","useEffect","fetchAllContacts","isContacts","Boolean","length"],"sourceRoot":""}